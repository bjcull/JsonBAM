@model JsonBAM.Models.LogsVM

@{
    ViewBag.Title = "Logs";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Logs for: @Model.Key</h2>
            
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Request Date</th>
                        <th>Verb</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var log in Model.Logs)
                    {
                        <tr>
                            <td>@log.DateCreated</td>
                            <td>@log.Verb</td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <h4>Headers</h4>
                                <div class="pretty-json" data-prettify-json="true">@log.HeaderJson</div>
                            </td>                            
                        </tr>
                        <tr>
                            <td colspan="2">
                                <h4>Body</h4>
                                <div class="pretty-json" data-prettify-json="true">@log.LogJson</div>
                            </td>                            
                        </tr>

                    }
                    @if (!Model.Logs.Any())
                    {
                        <tr><td colspan="2" class="text-center">There are no logs for this key.</td></tr>
                    }
                </tbody>
            </table>            
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(function() {
            $("div[data-prettify-json=true]").each(function(e, t) {
                var pre = $("<pre/>");
                pre.html(syntaxHighlight(JSON.stringify(JSON.parse($(this).text()), undefined, 4)));
                $(this).replaceWith(pre);
            });

            $(".view-json").click(function() {
                console.log("#" + $(this).data("id"));
                $("#" + $(this).data("id")).slideToggle("fast");
            });
        });

        function syntaxHighlight(json) {
            json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
            return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function(match) {
                var cls = 'number';
                if (/^"/.test(match)) {
                    if (/:$/.test(match)) {
                        cls = 'key';
                    } else {
                        cls = 'string';
                    }
                } else if (/true|false/.test(match)) {
                    cls = 'boolean';
                } else if (/null/.test(match)) {
                    cls = 'null';
                }
                return '<span class="' + cls + '">' + match + '</span>';
            });
        }
    </script>
}